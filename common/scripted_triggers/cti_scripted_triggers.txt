# All scopes are titles unless otherwise noted.

is_title_core_due_to_capital = { # scope is title
    trigger_if = {
        limit = {exists = holder}
        OR = {
            holder.capital_county = this # capital county
            AND = {
                is_de_jure_liege_or_above_target = holder.capital_county
                tier < holder.highest_held_title_tier # not the same tier as the primary title
            }
        }
    }
    trigger_else = {
        always = no
    }
}

is_title_special_core = { # Incomplete until I can see the always_follows_primary_heir tag
    always = no # head of faith was in this category, but it fits better in the category of having a title law that just happens to be always going to the primary heir.
}

has_any_title_law = { # scope is title (technically this means has a different title law than the realm law).
    tier >= tier_duchy
    OR = {
        is_head_of_faith = yes
        has_title_law_flag = elective_succession_law
        NOR = {
            AND = {
                has_title_law = male_only_law
                holder = {has_realm_law = male_only_law}
            }
            AND = {
                has_title_law = male_preference_law
                holder = {has_realm_law = male_preference_law}
            }
            AND = {
                has_title_law = equal_law
                holder = {has_realm_law = equal_law}
            }
            AND = {
                has_title_law = female_preference_law
                holder = {has_realm_law = female_only_law}
            }
        }
        
    }   
}

is_title_ineligible_due_to_title_law  = { # scope is title
    save_temporary_scope_as = t_title
    any_this_title_or_de_jure_above = {
        trigger_if = {
            limit = {exists = holder}
            holder = {has_title = scope:t_title} # held by owner
            has_any_title_law = yes
            OR = {
                NOT = {holder.primary_title = this} # this title is not the primary title
                AND = {
                    holder.primary_title = this
                    NOT = {current_heir.dynasty = holder.dynasty} # have to investigate what this does with lowborn characters.
                    holder = {
                        any_held_title = {
                            tier = holder.primary_title.tier
                            NOT = {holder.primary_title = this}
                        }
                    }
                }
            }
        }
        trigger_else = {
            always = no
        }
    }
    
}

is_title_core = { # Assume that this will only be called if the title is owned
    trigger_if = {
        limit = {has_variable = core}
        tier >= tier_county
        is_title_ineligible_due_to_title_law = no
        OR = {
            var:core = yes# var:core should be a boolean
            is_title_core_due_to_capital = yes
            holder.primary_title = this
            is_title_special_core = yes
        }
    }
    trigger_else = {
        tier >= tier_county
        is_title_ineligible_due_to_title_law = no
        OR = {
            is_title_core_due_to_capital = yes
            holder.primary_title = this
            is_title_special_core = yes
        }
    }
}

is_title_core_due_to_not_cti = {
    OR = {
        is_title_core_due_to_capital = yes
        holder.primary_title = this
        is_title_special_core = yes
    }
}

is_title_core_due_to_cti = {
    has_variable = core # This condition means that it is technically possible (though it should never happen) that a title is considered neither core due to cti or core due to not cti.
    is_title_core_due_to_not_cti = no
}

is_title_county = {
    tier = tier_county
}

does_core_count_to_limit = { # scope is title
    is_title_county = yes
}
#######################################################################################
######################## End of "Primative" triggers ##################################
#######################################################################################
is_a_child_title_chain_core = {# scope is title. assumes that rules are being followed up to this point.
    custom_description = {
        text = CHILD_CHAIN_EXISTS
        save_temporary_scope_as = _title
        holder = {# Changes scope to holder
            any_held_title = {
                is_title_core = yes
                NOT = {this = $EXCLUDED$} # excludes this title from consideration (used for checking breaking chains or adding cores)
                target_is_de_jure_liege_or_above = scope:_title # de_jure_child of this title. Assume that this disqualifies the title I am calling this on.

                NOT = { # need to make sure condition is true for every, so looking for one thing which does not meet it.
                    any_this_title_or_de_jure_above = {
                        trigger_if = {
                            limit = {exists = holder}
                            # nothing in chain is owned by holder (which implies it exists) but is not core.
                            # will break if there is a title which is held by holder, but is not core between two titles.
                            holder = {has_title = scope:_title} # held by owner. This shold also disqualify titles that don't exist.
                            tier < scope:_title.tier #in chain between two titles <- because title itself is presumably in heirarchy
                            OR = {
                                this = $EXCLUDED$ # for the purposes of this function, excluded is not core.
                                is_title_core = no # not core
                            }
                        }
                        trigger_else = {
                            always = no
                        }
                    }
                }
            }
        }
    }
}

is_title_eligible_for_core = { # Assume that this will only be called if the title is owned
    is_title_core = no # not a core title - will rule out core titles due to non-cti.
    is_title_ineligible_due_to_title_law = no
    OR = {
        is_title_county = yes # owned counties can always be cored
        save_temporary_scope_as = _title
        is_a_child_title_chain_core = {EXCLUDED = scope:_title} # EXCLUDED should do nothing in this case.
    }
}

# just checks "one up" so it assumes the rules are followed up to this point.
# does not actually check that this title is a core.
will_core_loss_break_chain = { # scope is title
    save_temporary_scope_as = w_title# count in comments will assume that this title is a county
    trigger_if ={# duchy
        limit = {
            de_jure_liege.tier <= holder.highest_held_title_tier
            holder = {has_title = scope:w_title.de_jure_liege}
        }
        de_jure_liege = {
            is_title_core = yes
            is_title_core_due_to_cti = yes
        }
        NOT = {de_jure_liege = {is_a_child_title_chain_core = {EXCLUDED = scope:w_title}}}
    }
    trigger_else_if = {# kingdom
        limit = {
            de_jure_liege.de_jure_liege.tier <= holder.highest_held_title_tier
            holder = {has_title = scope:w_title.de_jure_liege.de_jure_liege}
        }
        de_jure_liege.de_jure_liege = {
            is_title_core = yes
            is_title_core_due_to_cti = yes
        }
        NOT = {de_jure_liege.de_jure_liege = {is_a_child_title_chain_core = {EXCLUDED = scope:w_title}}}
    }
    trigger_else_if = {# empire
        limit = {
            de_jure_liege.de_jure_liege.de_jure_liege.tier <= holder.highest_held_title_tier
            holder = {has_title = scope:w_title.de_jure_liege.de_jure_liege.de_jure_liege}
        }
        de_jure_liege.de_jure_liege.de_jure_liege = {
            is_title_core = yes
            is_title_core_due_to_cti = yes
        }
        NOT = {de_jure_liege.de_jure_liege.de_jure_liege = {is_a_child_title_chain_core = {EXCLUDED = scope:w_title}}}
    }
    trigger_else = {
        always = no
    }
}

is_core_consistent = {# scope is title
    save_temporary_scope_as = _title
    OR = {
        is_title_county = yes
        is_title_core_due_to_not_cti = yes
        is_a_child_title_chain_core = {EXCLUDED = scope:_title}
    }
}

is_over_core_limit = { # scope is character
    core_count > val_core_limit
}

# Different from the trigger contained within in case one wants to add a character restriction on coring titles. There used to be one that characters were not allowed to go over their core limit.
can_core_title = {
    is_title_eligible_for_core = yes
}

can_de_core_title = {
    is_title_core = yes
    is_title_core_due_to_cti = yes
    will_core_loss_break_chain = no
}

has_core_titles = { # scope is character
    any_held_title = {
        is_title_core = yes
    }
}
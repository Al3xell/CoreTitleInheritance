val_core_limit = { # scope is character
    if = {
        limit={
            OR = {
                AND = {
                    OR = {
                        is_ai = no
                        has_game_rule = player_matching_ai_core_leaf_limit
                    }
                    has_game_rule = half_domain_core_leaf_limit
                }
                AND = {
                    is_ai = yes
                    has_game_rule = half_domain_ai_core_leaf_limit
                }
            }
        }
        value = domain_limit
        divide = 2
        ceiling = yes
    }
    else_if = {
        limit={
            OR = {
                AND = {
                    OR = {
                        is_ai = no
                        has_game_rule = player_matching_ai_core_leaf_limit
                    }
                    has_game_rule = quarter_domain_core_leaf_limit
                }
                AND = {
                    is_ai = yes
                    has_game_rule = quarter_domain_ai_core_leaf_limit
                }
            }
        }
        value = domain_limit
        divide = 4
        ceiling = yes
    }
    else_if = {
        limit={
            OR = {
                AND = {
                    OR = {
                        is_ai = no
                        has_game_rule = player_matching_ai_core_leaf_limit
                    }
                    has_game_rule = domain_core_leaf_limit
                }
                AND = {
                    is_ai = yes
                    has_game_rule = domain_ai_core_leaf_limit
                }
            }
        }
        value = domain_limit
    }
    else_if = {
        limit={
            OR = {
                AND = {
                    OR = {
                        is_ai = no
                        has_game_rule = player_matching_ai_core_leaf_limit
                    }
                    has_game_rule = ludicrous_core_leaf_limit
                }
                AND = {
                    is_ai = yes
                    has_game_rule = ludicrous_ai_core_leaf_limit
                }
            }
        }
        value = 100000
    }
}

coring_cost_flat = { # scope is character
    value = 0
    if = {
        limit = {has_realm_law_flag = partition_succession_law}
        add = medium_prestige_loss
    }
    else = {
        add = minor_prestige_loss # intentionally not changing refund under single heir
    }
}
coring_refund_flat = {value = minor_prestige_gain}
coring_refund_flat_full = { # scope is character
    value = 0
    subtract = coring_cost_flat
}

overtime_core_cost = { # scope is character
    value = 0
    if = {
        limit = {has_realm_law_flag = partition_succession_law}
        subtract = 0.1 # This should be half the prestige gain from holding a county
    }
    else = {
        subtract = 0.25
    }
}

core_count = { # scope is character
    value = 0
    every_held_title = {
        if = {
            limit = {
                is_title_core = yes
                does_core_count_to_limit = yes
            }
            add = 1
        }
    }
}

amount_over_core_limit = { # scope is character
    value = core_count
    subtract = val_core_limit
    min = 0 # sets lower bound of 0
}

val_core_titles = {
    value = 0
    every_held_title = {
        if = {
            limit = {is_title_core = yes}
            add = 1
        }
    }
}
# Only used in one place but I am putting it here so the code is easier to read (though not determine the exact calculations).
count_core_leaves = {
    value = 0
    every_held_title = {
        if = {
            limit = {
                is_title_core = yes
                is_core_leaf = yes
            }
            add = 1
        }
    }
}

count_core_branches = {
    value = 0
    every_held_title = {
        if = {
            limit = {
                is_title_core = yes
                is_core_leaf = no
            }
            add = 1
        }
    }
}
# All scopes are titles unless otherwise noted.

is_title_core_due_to_capital = { # scope is title
    OR = {
        holder.capital_county = this # capital county
        AND = {
            is_de_jure_liege_or_above_target = holder.capital_county
            tier < holder.primary_title.tier # not the same tier as the primary title
        }
    }
}

is_title_special_core = { # Incomplete until I can see the always_follows_primary_heir tag
    is_head_of_faith = yes
}

is_title_core_due_to_not_cti = {
    is_title_core = yes
    OR = {
        is_title_core_due_to_capital = yes
        holder.primary_title = this
        is_title_special_core = yes
    }
}

is_title_core_due_to_cti = {
    is_title_core = yes
    has_variable = core # This condition means that it is technically possible (though it should never happen) that a title is considered neither core due to cti or core due to not cti.
    is_title_core_due_to_not_cti = no
}

is_title_core = { # Assume that this will only be called if the title is owned
    trigger_if = {
        limit = {has_variable = core}
        tier >= tier_county
        OR = {
            var:core = yes# var:core should be a boolean
            is_title_core_due_to_capital = yes
            holder.primary_title = this
            is_title_special_core = yes
        }
    }
    trigger_else = {
        tier >= tier_county
        OR = {
            is_title_core_due_to_capital = yes
            holder.primary_title = this
            is_title_special_core = yes
        }
    }
}

is_title_county = {
    tier = tier_county
}

does_core_count_to_limit = { # scope is title
    is_title_county = yes
}

is_a_child_title_chain_core = {# scope is title.
    save_temporary_scope_as = _title
    holder = {# Changes scope to holder
        any_core_title_item = { # direct de jure liege of another core title
            AND ={
                NOT = {this = $EXCLUDED$}
                is_de_jure_liege_or_above_target = scope:_title # Assume that this disqualifies the title I am calling this on.
                NOT = { # need to make sure condition is true for every, so looking for one thing which does not meet it.
                    any_this_title_or_de_jure_above = {
                        # nothing in chain is owned by holder (which implies it exists) but is not core.
                        # will break if there is a title which is held by holder, but is not core between two titles.
                        OR = {
                            holder = scope:_title.holder # held by owner. This shold also disqualify titles that don't exist.
                            tier < scope:_title.tier #in chain between two titles#<- not <- because title itself is presumably in heirarchy
                            is_title_core = no # not core
                        }
                    }
                }
            }
        }
    }
}

is_title_eligible_for_core = { # Assume that this will only be called if the title is owned
    is_title_core = no # not a core title - will rule out core titles due to non-cti.
    OR = {
        is_title_county = yes # owned counties can always be cored
        is_a_child_title_chain_core = {EXCLUDED = this} # EXCLUDED should do nothing in this case.
    }
}

# just checks "one up" so it assumes the rules are followed up to this point.
# does not actually check that this title is a core.
will_core_loss_break_chain = { # scope is title
    save_temporary_scope_as = _title# count in comments will assume that this title is a county
    holder.primary_title = {save_temporary_scope_as = _primary} # means will not get to the primary_title. Also prevents it from going beyond empire.
    trigger_if ={# duchy
        limit = {
            de_jure_liege.tier < scope:_primary.tier
            de_jure_liege.holder = holder
        }
        de_jure_liege = {is_title_core = yes}
        NOT = {de_jure_liege = {is_a_child_title_chain_core = {EXCLUDED = scope:_title}}}
    }
    trigger_else_if = {# kingdom
        limit = {
            de_jure_liege.de_jure_liege.tier < scope:_primary.tier
            de_jure_liege.de_jure_liege.holder = holder
        }
        de_jure_liege.de_jure_liege = {is_title_core = yes}
        NOT = {de_jure_liege.de_jure_liege = {is_a_child_title_chain_core = {EXCLUDED = scope:_title}}}
    }
    trigger_else_if = {# empire
        limit = {
            de_jure_liege.de_jure_liege.de_jure_liege.tier < scope:_primary.tier
            de_jure_liege.de_jure_liege.de_jure_liege.holder = holder
        }
        de_jure_liege.de_jure_liege.de_jure_liege = {is_title_core = yes}
        NOT = {de_jure_liege.de_jure_liege.de_jure_liege = {is_a_child_title_chain_core = {EXCLUDED = scope:_title}}}
    }
    trigger_else = {
        always = no
    }
}

is_core_consistent = {# scope is title
    save_temporary_scope_as = _title
    OR = {
        is_title_county = yes
        is_title_core_due_to_not_cti = yes
        is_a_child_title_chain_core = {EXCLUDED = this}
    }
}

is_over_core_limit = { # scope is character
    trigger_if = {
        limit = {has_variable = core_count}
        var:core_count > val_core_limit
    }
    trigger_else = {
        always = no
    }
}

# Different from the trigger contained within in case one wants to add a character restriction on coring titles. There used to be one that characters were not allowed to go over their core limit.
can_core_title = {
    is_title_eligible_for_core = yes
}

can_de_core_title = {
    is_title_core_due_to_cti = yes
    will_core_loss_break_chain = no
}

has_core_titles = { # scope is character
    any_core_title_item = {always = yes} # inefficient, but good enough for now.
}